) %>%
filter(!is.na(college_type) & !is.na(subcategory))
# Set factor levels for custom order of college_type
combined_df_na_cleaned$college_type <- factor(combined_df_na_cleaned$college_type,
levels = c("Baccalaureate", "Master's", "Doctoral", "Special Focus", "Tribal")
)
# Set factor levels for custom order of subcategories
combined_df_na_cleaned$subcategory <- factor(combined_df_na_cleaned$subcategory, levels = c(
"Baccalaureate: Diverse Fields",
"Baccalaureate: Arts & Sciences Focus",
"Master's: Small Programs",
"Master's: Medium Programs",
"Master's: Larger Programs",
"Doctoral: High Research Activity",
"Doctoral: Very High Research Activity",
"Doctoral: Professional Universities",
"Special Focus: Research Institution",
"Special Focus: Health Professions",
"Special Focus: Medical Schools",
"Special Focus: Engineering/Technology",
"Special Focus: Other Institutions",
"Tribal Colleges"
))
# Custom shaded color palette
color_palette_shaded <- c(
# Reds for Baccalaureate
"Baccalaureate: Diverse Fields" = "#ff9999",
"Baccalaureate: Arts & Sciences Focus" = "#cc0000",
# Oranges for Master's
"Master's: Small Programs" = "#ffcc99",
"Master's: Medium Programs" = "#ff9933",
"Master's: Larger Programs" = "#cc6600",
# Blues for Doctoral
"Doctoral: High Research Activity" = "#99ccff",
"Doctoral: Very High Research Activity" = "#3399ff",
"Doctoral: Professional Universities" = "#003366",
# Greens for Special Focus
"Special Focus: Research Institution" = "#b2d8b2",
"Special Focus: Health Professions" = "#66cc66",
"Special Focus: Medical Schools" = "#339966",
"Special Focus: Engineering/Technology" = "#26734d",
"Special Focus: Other Institutions" = "#145c33",
# Purple for Tribal
"Tribal Colleges" = "#9966cc"
)
# Recode main college type and subcategory
combined_df_na_cleaned <- combined_df_na %>%
mutate(
college_type = case_when(
grepl("Baccalaureate Colleges", classific_2021) ~ "Baccalaureate",
grepl("Master's Colleges & Universities", classific_2021) ~ "Master's",
grepl("Doctoral Universities", classific_2021) ~ "Doctoral",
grepl("Tribal Colleges and Universities", classific_2021) ~ "Tribal",
grepl("Special Focus Four-Year", classific_2021) ~ "Special Focus",
TRUE ~ NA_character_
),
subcategory = case_when(
grepl("Master's Colleges & Universities: Small Programs", classific_2021) ~ "Master's: Small Programs",
grepl("Master's Colleges & Universities: Medium Programs", classific_2021) ~ "Master's: Medium Programs",
grepl("Master's Colleges & Universities: Larger Programs", classific_2021) ~ "Master's: Larger Programs",
grepl("Doctoral Universities: High Research Activity", classific_2021) ~ "Doctoral: High Research Activity",
grepl("Doctoral Universities: Very High Research Activity", classific_2021) ~ "Doctoral: Very High Research Activity",
grepl("Doctoral/Professional Universities", classific_2021) ~ "Doctoral: Professional Universities",
grepl("Baccalaureate Colleges: Diverse Fields", classific_2021) ~ "Baccalaureate: Diverse Fields",
grepl("Baccalaureate Colleges: Arts & Sciences Focus", classific_2021) ~ "Baccalaureate: Arts & Sciences Focus",
grepl("Special Focus Four-Year: Research Institution", classific_2021) ~ "Special Focus: Research Institution",
grepl("Special Focus Four-Year: Other Health Professions Schools", classific_2021) ~ "Special Focus: Health Professions",
grepl("Special Focus Four-Year: Medical Schools & Centers", classific_2021) ~ "Special Focus: Medical Schools",
grepl("Special Focus Four-Year: Engineering and Other Technology-Related Schools", classific_2021) ~ "Special Focus: Engineering/Technology",
grepl("Special Focus Four-Year: Other Special Focus Institutions", classific_2021) ~ "Special Focus: Other Institutions",
grepl("Tribal Colleges and Universities", classific_2021) ~ "Tribal Colleges",
TRUE ~ NA_character_
)
) %>%
filter(!is.na(college_type) & !is.na(subcategory))
# Set factor levels for custom order of college_type
combined_df_na_cleaned$college_type <- factor(combined_df_na_cleaned$college_type,
levels = c("Baccalaureate", "Master's", "Doctoral", "Special Focus", "Tribal")
)
# Set factor levels for custom order of subcategories
combined_df_na_cleaned$subcategory <- factor(combined_df_na_cleaned$subcategory, levels = c(
"Baccalaureate: Diverse Fields",
"Baccalaureate: Arts & Sciences Focus",
"Master's: Small Programs",
"Master's: Medium Programs",
"Master's: Larger Programs",
"Doctoral: High Research Activity",
"Doctoral: Very High Research Activity",
"Doctoral: Professional Universities",
"Special Focus: Research Institution",
"Special Focus: Health Professions",
"Special Focus: Medical Schools",
"Special Focus: Engineering/Technology",
"Special Focus: Other Institutions",
"Tribal Colleges"
))
# Custom shaded color palette
color_palette_shaded <- c(
# Reds for Baccalaureate
"Baccalaureate: Diverse Fields" = "#ff9999",
"Baccalaureate: Arts & Sciences Focus" = "#cc0000",
# Oranges for Master's
"Master's: Small Programs" = "#ffcc99",
"Master's: Medium Programs" = "#ff9933",
"Master's: Larger Programs" = "#cc6600",
# Blues for Doctoral
"Doctoral: High Research Activity" = "#99ccff",
"Doctoral: Very High Research Activity" = "#3399ff",
"Doctoral: Professional Universities" = "#003366",
# Greens for Special Focus
"Special Focus: Research Institution" = "#b2d8b2",
"Special Focus: Health Professions" = "#66cc66",
"Special Focus: Medical Schools" = "#339966",
"Special Focus: Engineering/Technology" = "#26734d",
"Special Focus: Other Institutions" = "#145c33",
# Purple for Tribal
"Tribal Colleges" = "#9966cc"
)
p1 <- ggplot(combined_df_na_cleaned, aes(x = college_type, fill = subcategory)) +
geom_bar(position = "stack") +
scale_fill_manual(values = color_palette_shaded) +
labs(title = "Institution Counts by College Type and Subcategory",
x = "College Type", y = "Count of Institutions") +
theme_minimal() +
theme(
legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.text = element_text(size = 10),
legend.key.size = unit(0.5, "cm"),
legend.box.just = "center",
legend.spacing.x = unit(0.5, 'cm'),
legend.spacing.y = unit(0.25, 'cm'),
legend.key.height = unit(0.5, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
guides(fill = guide_legend(ncol = 3, title = "Subcategory"))
p1
# Ensure college_type factor order is set (if not already done)
combined_df_na_cleaned$college_type <- factor(combined_df_na_cleaned$college_type,
levels = c("Baccalaureate", "Master's", "Doctoral", "Special Focus", "Tribal")
)
# Proportion stacked bar plot (horizontal) with 4 columns for the legend
p2 <- ggplot(combined_df_na_cleaned, aes(y = college_type, fill = subcategory)) +
geom_bar(position = "fill") +  # This scales the bars to 100% for each college type
scale_fill_manual(values = color_palette_shaded) +  # Apply the custom color palette
labs(title = "Proportional Counts by College Type and Subcategory",
x = "Proportion of Institutions",
y = "College Type") +
theme_minimal() +
theme(axis.text.y = element_text(angle = 0),    # Keep y-axis labels horizontal
axis.text.x = element_text(angle = 45, hjust = 1)) + # Rotate x-axis labels for readability
guides(fill = guide_legend(ncol = 1, title = "Subcategory"))
# Print the plot
p2
# Prepare the data and drop NA
plot_data <- combined_df_na %>%
filter(!is.na(research_tier_2025)) %>%
mutate(
research_tier_2025 = factor(
research_tier_2025,
levels = c("Research Colleges and Universities",
"Research 1: Very High Research Spending and Doctorate Production",
"Research 2: High Research Spending and Doctorate Production")
)
) %>%
count(research_tier_2025) %>%
mutate(percentage = n / sum(n) * 100)  # Calculate percentage for pie chart
# Raw count bar plot
raw_count_plot <- ggplot(plot_data, aes(x = research_tier_2025, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
x = "Research Activity Designation",
y = "Raw Count"
) +
theme_minimal() +
scale_x_discrete(labels = c(
"Research Colleges and Universities" = "Research Colleges\nand Universities",
"Research 1: Very High Research Spending and Doctorate Production" = "R1",
"Research 2: High Research Spending and Doctorate Production" = "R2"
))
# Proportional bar plot (percentage)
proportional_plot <- ggplot(plot_data, aes(x = research_tier_2025, y = percentage)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(
x = "Research Activity Designation",
y = "Proportion (%)"
) +
theme_minimal() +
scale_x_discrete(labels = c(
"Research Colleges and Universities" = "Research Colleges\nand Universities",
"Research 1: Very High Research Spending and Doctorate Production" = "R1",
"Research 2: High Research Spending and Doctorate Production" = "R2"
))
# Combine the two plots and add a single title, subtitle, and caption for the whole figure
combined_plot <- raw_count_plot + proportional_plot +
plot_layout(guides = 'collect') +
plot_annotation(
title = "Raw Count and Proportion of Institutions by Research Activity Designation (2025)",
subtitle = "Excludes institutions without a research designation",
caption = "Note: 'Research Colleges and Universities' are research-focused but do not meet R1 or R2 criteria"
)
# Print the combined plot
combined_plot
# Clean data and relabel tiers
clean_df <- combined_df_na %>%
filter(!is.na(avg_num_doc_degrees_2020_2023), !is.na(research_tier_2025)) %>%
mutate(
research_tier_2025 = recode(
research_tier_2025,
"Research 1: Very High Research Spending and Doctorate Production" = "R1",
"Research 2: High Research Spending and Doctorate Production" = "R2",
"Research Colleges and Universities" = "Research Colleges\nand Universities"
)
)
# Plot with horizontal box and whiskers
ggplot(clean_df, aes(x = avg_num_doc_degrees_2020_2023, y = research_tier_2025)) +
geom_boxplot(fill = "slateblue", alpha = 0.7, outlier.shape = NA) +
geom_jitter(color = "darkslateblue", alpha = 0.5, size = 1.8) +
labs(
title = "Average Doctoral Degrees by Research Tier (2020–2023)",
x = "Avg. Doctoral Degrees (2020–2023)",
y = "Research Tier (2025)",
caption = "Note: 'Research Colleges and Universities' are research-focused but do not meet R1 or R2 criteria"
) +
theme_minimal() +
theme(
plot.caption = element_text(hjust = 0, size = 9, color = "gray30"),
axis.text.y = element_text(size = 10)
)
classification_stats <- read_csv("carnegie_classification_stats.csv")
spending_doctorate_awards <- read_csv("carnegie_spending_doctorate_awards.csv")
#head(classification_stats)
colnames(classification_stats)
summary(classification_stats)
head(spending_doctorate_awards)
colnames(spending_doctorate_awards)
summary(spending_doctorate_awards)
classification_df <- data.frame(classification_stats)
class(classification_df)
spending_df <- data.frame(spending_doctorate_awards)
class(spending_df)
# Confirming column names on what to join by
colnames(classification_df)
colnames(spending_df)
# Perform full join on 'unitid'
combined_df <- full_join(classification_df, spending_df, by = "unitid")
# Confirm join and notice duplicate column names
colnames(combined_df)
# Duplicate School Names (there are 12)
combined_df %>%
filter(name.x != name.y) %>%
select(unitid, name.x, name.y)
# Duplicate City Names (there is 1, 'Des Moines' and 'West Des Moines')
combined_df %>%
filter(city.x != city.y ) %>%
select(unitid, city.x, city.y)
# Duplicate State Names (there are no duplicates)
combined_df %>%
filter(state.x != state.y) %>%
select(unitid, state.x, state.y)
# Create a new dataframe for mismatched rows
mismatched <- combined_df %>%
filter(name.x != name.y | city.x != city.y | state.x != state.y) %>%
select(unitid, name.x, name.y, city.x, city.y, state.x, state.y)
# View the mismatched rows
print(mismatched)
# Function to replace NULL with NA
replace_null_with_na <- function(x) {
if (is.list(x)) {
# Apply recursively if it's a list (to handle nested data frames)
return(lapply(x, replace_null_with_na))
} else if (is.null(x)) {
return(NA)  # Replace NULL with NA
} else {
return(x)  # Otherwise, return the value unchanged
}
}
# Use it to apply to a data frame
combined_df_na <- combined_df %>%
mutate(across(everything(), replace_null_with_na))
# View the result
summary(combined_df_na)
# Display a table of the count of missing values (NAs) per column
missing_data <- combined_df_na %>%
summarise(across(everything(), ~ sum(is.na(.)))) %>%
gather(key = "column_name", value = "NAs")
print(missing_data)
# Filter rows where name.x or name.y is NA, and select unitid, name.x, name.y
rows_with_na_names <- combined_df_na %>%
filter(is.na(name.x) | is.na(name.y)) %>%
select(unitid, name.x, name.y, city.x, city.y)
print(rows_with_na_names)
# Sould be referring to Penn State, with 2 different unitid AND different school name spelling
# Recode main college type and subcategory
combined_df_na_cleaned <- combined_df_na %>%
mutate(
college_type = case_when(
grepl("Baccalaureate Colleges", classific_2021) ~ "Baccalaureate",
grepl("Master's Colleges & Universities", classific_2021) ~ "Master's",
grepl("Doctoral Universities", classific_2021) ~ "Doctoral",
grepl("Tribal Colleges and Universities", classific_2021) ~ "Tribal",
grepl("Special Focus Four-Year", classific_2021) ~ "Special Focus",
TRUE ~ NA_character_
),
subcategory = case_when(
grepl("Master's Colleges & Universities: Small Programs", classific_2021) ~ "Master's: Small Programs",
grepl("Master's Colleges & Universities: Medium Programs", classific_2021) ~ "Master's: Medium Programs",
grepl("Master's Colleges & Universities: Larger Programs", classific_2021) ~ "Master's: Larger Programs",
grepl("Doctoral Universities: High Research Activity", classific_2021) ~ "Doctoral: High Research Activity",
grepl("Doctoral Universities: Very High Research Activity", classific_2021) ~ "Doctoral: Very High Research Activity",
grepl("Doctoral/Professional Universities", classific_2021) ~ "Doctoral: Professional Universities",
grepl("Baccalaureate Colleges: Diverse Fields", classific_2021) ~ "Baccalaureate: Diverse Fields",
grepl("Baccalaureate Colleges: Arts & Sciences Focus", classific_2021) ~ "Baccalaureate: Arts & Sciences Focus",
grepl("Special Focus Four-Year: Research Institution", classific_2021) ~ "Special Focus: Research Institution",
grepl("Special Focus Four-Year: Other Health Professions Schools", classific_2021) ~ "Special Focus: Health Professions",
grepl("Special Focus Four-Year: Medical Schools & Centers", classific_2021) ~ "Special Focus: Medical Schools",
grepl("Special Focus Four-Year: Engineering and Other Technology-Related Schools", classific_2021) ~ "Special Focus: Engineering/Technology",
grepl("Special Focus Four-Year: Other Special Focus Institutions", classific_2021) ~ "Special Focus: Other Institutions",
grepl("Tribal Colleges and Universities", classific_2021) ~ "Tribal Colleges",
TRUE ~ NA_character_
)
) %>%
filter(!is.na(college_type) & !is.na(subcategory))
# Set factor levels for custom order of college_type
combined_df_na_cleaned$college_type <- factor(combined_df_na_cleaned$college_type,
levels = c("Baccalaureate", "Master's", "Doctoral", "Special Focus", "Tribal")
)
# Set factor levels for custom order of subcategories
combined_df_na_cleaned$subcategory <- factor(combined_df_na_cleaned$subcategory, levels = c(
"Baccalaureate: Diverse Fields",
"Baccalaureate: Arts & Sciences Focus",
"Master's: Small Programs",
"Master's: Medium Programs",
"Master's: Larger Programs",
"Doctoral: High Research Activity",
"Doctoral: Very High Research Activity",
"Doctoral: Professional Universities",
"Special Focus: Research Institution",
"Special Focus: Health Professions",
"Special Focus: Medical Schools",
"Special Focus: Engineering/Technology",
"Special Focus: Other Institutions",
"Tribal Colleges"
))
# Custom shaded color palette
color_palette_shaded <- c(
# Reds for Baccalaureate
"Baccalaureate: Diverse Fields" = "#ff9999",
"Baccalaureate: Arts & Sciences Focus" = "#cc0000",
# Oranges for Master's
"Master's: Small Programs" = "#ffcc99",
"Master's: Medium Programs" = "#ff9933",
"Master's: Larger Programs" = "#cc6600",
# Blues for Doctoral
"Doctoral: High Research Activity" = "#99ccff",
"Doctoral: Very High Research Activity" = "#3399ff",
"Doctoral: Professional Universities" = "#003366",
# Greens for Special Focus
"Special Focus: Research Institution" = "#b2d8b2",
"Special Focus: Health Professions" = "#66cc66",
"Special Focus: Medical Schools" = "#339966",
"Special Focus: Engineering/Technology" = "#26734d",
"Special Focus: Other Institutions" = "#145c33",
# Purple for Tribal
"Tribal Colleges" = "#9966cc"
)
p1 <- ggplot(combined_df_na_cleaned, aes(x = college_type, fill = subcategory)) +
geom_bar(position = "stack") +
scale_fill_manual(values = color_palette_shaded) +
labs(title = "Institution Counts by College Type and Subcategory",
x = "College Type", y = "Count of Institutions") +
theme_minimal() +
theme(
legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.text = element_text(size = 10),
legend.key.size = unit(0.5, "cm"),
legend.box.just = "center",
legend.spacing.x = unit(0.5, 'cm'),
legend.spacing.y = unit(0.25, 'cm'),
legend.key.height = unit(0.5, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
guides(fill = guide_legend(ncol = 3, title = "Subcategory"))
p1
p1 <- ggplot(combined_df_na_cleaned, aes(x = college_type, fill = subcategory)) +
geom_bar(position = "stack") +
scale_fill_manual(values = color_palette_shaded) +
labs(title = "Institution Counts by College Type and Subcategory",
x = "College Type", y = "Count of Institutions") +
theme_minimal() +
theme(
legend.position = "bottom",
legend.title = element_blank(),
legend.box = "horizontal",
legend.text = element_text(size = 10),
legend.key.size = unit(0.5, "cm"),
legend.box.just = "center",
legend.spacing.x = unit(0.5, 'cm'),
legend.spacing.y = unit(0.25, 'cm'),
legend.key.height = unit(0.5, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
guides(fill = guide_legend(ncol = 3, title = "Subcategory"))
p1
# Ensure college_type factor order is set (if not already done)
combined_df_na_cleaned$college_type <- factor(combined_df_na_cleaned$college_type,
levels = c("Baccalaureate", "Master's", "Doctoral", "Special Focus", "Tribal")
)
# Proportion stacked bar plot (horizontal) with 4 columns for the legend
p2 <- ggplot(combined_df_na_cleaned, aes(y = college_type, fill = subcategory)) +
geom_bar(position = "fill") +  # This scales the bars to 100% for each college type
scale_fill_manual(values = color_palette_shaded) +  # Apply the custom color palette
labs(title = "Proportional Counts by College Type and Subcategory",
x = "Proportion of Institutions",
y = "College Type") +
theme_minimal() +
theme(axis.text.y = element_text(angle = 0),    # Keep y-axis labels horizontal
axis.text.x = element_text(angle = 45, hjust = 1)) + # Rotate x-axis labels for readability
guides(fill = guide_legend(ncol = 1, title = "Subcategory"))
# Print the plot
p2
# Prepare the data and drop NA
plot_data <- combined_df_na %>%
filter(!is.na(research_tier_2025)) %>%
mutate(
research_tier_2025 = factor(
research_tier_2025,
levels = c("Research Colleges and Universities",
"Research 1: Very High Research Spending and Doctorate Production",
"Research 2: High Research Spending and Doctorate Production")
)
) %>%
count(research_tier_2025) %>%
mutate(percentage = n / sum(n) * 100)  # Calculate percentage for pie chart
# Raw count bar plot
raw_count_plot <- ggplot(plot_data, aes(x = research_tier_2025, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
x = "Research Activity Designation",
y = "Raw Count"
) +
theme_minimal() +
scale_x_discrete(labels = c(
"Research Colleges and Universities" = "Research Colleges\nand Universities",
"Research 1: Very High Research Spending and Doctorate Production" = "R1",
"Research 2: High Research Spending and Doctorate Production" = "R2"
))
# Proportional bar plot (percentage)
proportional_plot <- ggplot(plot_data, aes(x = research_tier_2025, y = percentage)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(
x = "Research Activity Designation",
y = "Proportion (%)"
) +
theme_minimal() +
scale_x_discrete(labels = c(
"Research Colleges and Universities" = "Research Colleges\nand Universities",
"Research 1: Very High Research Spending and Doctorate Production" = "R1",
"Research 2: High Research Spending and Doctorate Production" = "R2"
))
# Combine the two plots and add a single title, subtitle, and caption for the whole figure
combined_plot <- raw_count_plot + proportional_plot +
plot_layout(guides = 'collect') +
plot_annotation(
title = "Raw Count and Proportion of Institutions by Research Activity Designation (2025)",
subtitle = "Excludes institutions without a research designation",
caption = "Note: 'Research Colleges and Universities' are research-focused but do not meet R1 or R2 criteria"
)
# Print the combined plot
combined_plot
# Clean data and relabel tiers
clean_df <- combined_df_na %>%
filter(!is.na(avg_num_doc_degrees_2020_2023), !is.na(research_tier_2025)) %>%
mutate(
research_tier_2025 = recode(
research_tier_2025,
"Research 1: Very High Research Spending and Doctorate Production" = "R1",
"Research 2: High Research Spending and Doctorate Production" = "R2",
"Research Colleges and Universities" = "Research Colleges\nand Universities"
)
)
# Plot with horizontal box and whiskers
ggplot(clean_df, aes(x = avg_num_doc_degrees_2020_2023, y = research_tier_2025)) +
geom_boxplot(fill = "slateblue", alpha = 0.7, outlier.shape = NA) +
geom_jitter(color = "darkslateblue", alpha = 0.5, size = 1.8) +
labs(
title = "Average Doctoral Degrees by Research Tier (2020–2023)",
x = "Avg. Doctoral Degrees (2020–2023)",
y = "Research Tier (2025)",
caption = "Note: 'Research Colleges and Universities' are research-focused but do not meet R1 or R2 criteria"
) +
theme_minimal() +
theme(
plot.caption = element_text(hjust = 0, size = 9, color = "gray30"),
axis.text.y = element_text(size = 10)
)
install.packages("patchwork")
install.packages("scales")
install.packages("RColorBrewer")
install.packages("scales")
install.packages("patchwork")
library(tidyverse)
library(readr)
library(tidyr)
library(dplyr)
library(lubridate)  # for Datetime formatting
library(stringr)  # for extracting URL
library(patchwork)  # for putting multiple graphs on one fig
library(scales)
