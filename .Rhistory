library(ggplot2)
library(maps)
combined_df_na %>%
count(classification_2021) %>%
ggplot(aes(x = classification_2021, y = n, fill = classification_2021)) +
geom_bar(stat = "identity") +
labs(title = "Number of Institutions by Research Classification (2021)",
x = "Classification", y = "Number of Institutions") +
theme_minimal()
# Display a table of the count of missing values (NAs) per column
missing_data <- combined_df_na %>%
summarise(across(everything(), ~ sum(is.na(.)))) %>%
gather(key = "column_name", value = "NAs")
library(tidyverse)
library(readr)
library(tidyr)
library(dplyr)
library(lubridate)  # for Datetime formatting
library(stringr)  # for extracting URL
library(tidyverse)
library(readr)
library(tidyr)
library(dplyr)
library(lubridate)  # for Datetime formatting
library(stringr)  # for extracting URL
combined_df_na %>%
count(classification_2021) %>%
ggplot(aes(x = classification_2021, y = n, fill = classification_2021)) +
geom_bar(stat = "identity") +
labs(title = "Number of Institutions by Research Classification (2021)",
x = "Classification", y = "Number of Institutions") +
theme_minimal()
#head(classification_stats)
colnames(classification_stats)
classification_stats <- read_csv("carnegie_classification_stats - CLEAN.csv")
spending_doctorate_awards <- read_csv("carnegie_spending_doctorate_awards - CLEAN.csv")
#head(classification_stats)
colnames(classification_stats)
summary(classification_stats)
head(spending_doctorate_awards)
colnames(spending_doctorate_awards)
summary(spending_doctorate_awards)
classification_df <- data.frame(classification_stats)
class(classification_df)
spending_df <- data.frame(spending_doctorate_awards)
class(spending_df)
# Confirming column names on what to join by
colnames(classification_df)
colnames(spending_df)
# Perform full join on 'unitid'
combined_df <- full_join(classification_df, spending_df, by = "unitid")
# Confirm join and notice duplicate column names
colnames(combined_df)
# Duplicate School Names (there are 12)
combined_df %>%
filter(name.x != name.y) %>%
select(unitid, name.x, name.y)
# Duplicate City Names (there is 1, 'Des Moines' and 'West Des Moines')
combined_df %>%
filter(city.x != city.y ) %>%
select(unitid, city.x, city.y)
# Duplicate State Names (there are no duplicates)
combined_df %>%
filter(state.x != state.y) %>%
select(unitid, state.x, state.y)
# Create a new dataframe for mismatched rows
mismatched <- combined_df %>%
filter(name.x != name.y | city.x != city.y | state.x != state.y) %>%
select(unitid, name.x, name.y, city.x, city.y, state.x, state.y)
# View the mismatched rows
print(mismatched)
# Function to replace NULL with NA
replace_null_with_na <- function(x) {
if (is.list(x)) {
# Apply recursively if it's a list (to handle nested data frames)
return(lapply(x, replace_null_with_na))
} else if (is.null(x)) {
return(NA)  # Replace NULL with NA
} else {
return(x)  # Otherwise, return the value unchanged
}
}
# Use it to apply to a data frame
combined_df_na <- combined_df %>%
mutate(across(everything(), replace_null_with_na))
# View the result
summary(combined_df_na)
# Display a table of the count of missing values (NAs) per column
missing_data <- combined_df_na %>%
summarise(across(everything(), ~ sum(is.na(.)))) %>%
gather(key = "column_name", value = "NAs")
print(missing_data)
combined_df_na %>%
count(classification_2021) %>%
ggplot(aes(x = classification_2021, y = n, fill = classification_2021)) +
geom_bar(stat = "identity") +
labs(title = "Number of Institutions by Research Classification (2021)",
x = "Classification", y = "Number of Institutions") +
theme_minimal()
combined_df_na %>%
count(classific_2021) %>%
ggplot(aes(x = classific_2021, y = n, fill = classific_2021)) +
geom_bar(stat = "identity") +
labs(title = "Number of Institutions by Research Classification (2021)",
x = "Classification", y = "Number of Institutions") +
theme_minimal()
library(tidyverse)
library(readr)
library(tidyr)
library(dplyr)
library(lubridate)  # for Datetime formatting
library(stringr)  # for extracting URL
classification_stats <- read_csv("carnegie_classification_stats - CLEAN.csv")
spending_doctorate_awards <- read_csv("carnegie_spending_doctorate_awards - CLEAN.csv")
#head(classification_stats)
colnames(classification_stats)
summary(classification_stats)
head(spending_doctorate_awards)
colnames(spending_doctorate_awards)
summary(spending_doctorate_awards)
classification_df <- data.frame(classification_stats)
class(classification_df)
spending_df <- data.frame(spending_doctorate_awards)
class(spending_df)
# Confirming column names on what to join by
colnames(classification_df)
colnames(spending_df)
# Perform full join on 'unitid'
combined_df <- full_join(classification_df, spending_df, by = "unitid")
# Confirm join and notice duplicate column names
colnames(combined_df)
# Duplicate School Names (there are 12)
combined_df %>%
filter(name.x != name.y) %>%
select(unitid, name.x, name.y)
# Duplicate City Names (there is 1, 'Des Moines' and 'West Des Moines')
combined_df %>%
filter(city.x != city.y ) %>%
select(unitid, city.x, city.y)
# Duplicate State Names (there are no duplicates)
combined_df %>%
filter(state.x != state.y) %>%
select(unitid, state.x, state.y)
# Create a new dataframe for mismatched rows
mismatched <- combined_df %>%
filter(name.x != name.y | city.x != city.y | state.x != state.y) %>%
select(unitid, name.x, name.y, city.x, city.y, state.x, state.y)
# View the mismatched rows
print(mismatched)
# Function to replace NULL with NA
replace_null_with_na <- function(x) {
if (is.list(x)) {
# Apply recursively if it's a list (to handle nested data frames)
return(lapply(x, replace_null_with_na))
} else if (is.null(x)) {
return(NA)  # Replace NULL with NA
} else {
return(x)  # Otherwise, return the value unchanged
}
}
# Use it to apply to a data frame
combined_df_na <- combined_df %>%
mutate(across(everything(), replace_null_with_na))
# View the result
summary(combined_df_na)
# Display a table of the count of missing values (NAs) per column
missing_data <- combined_df_na %>%
summarise(across(everything(), ~ sum(is.na(.)))) %>%
gather(key = "column_name", value = "NAs")
print(missing_data)
combined_df_na %>%
count(classific_2021) %>%
ggplot(aes(x = classific_2021, y = n, fill = classific_2021)) +
geom_bar(stat = "identity") +
labs(title = "Number of Institutions by Research Classification (2021)",
x = "Classification", y = "Number of Institutions") +
theme_minimal()
